syntax = "proto3";

message Upstream {

  oneof content {
    Ping ping = 1;
    GetFullImage get_full_image = 2;
    GetSnapshotDiffImage get_snapshot_image = 3;
    CreateSnapshotImage create_snapshot_image = 4;
    ObjectiveArea submit_objective = 5;
    SubmitDailyMap submit_daily_map = 6;
    ObjectiveArea schedule_objective = 7;
  }

  message Ping {
    optional string echo = 1;
  }

  message GetFullImage {
  }

  message GetSnapshotDiffImage {
  }

  message CreateSnapshotImage {
  }

  message ObjectiveArea {
    uint32 objectiveId = 1;
    uint32 width = 2;
    uint32 height = 3;
    uint32 offset_x = 4;
    uint32 offset_y = 5;
  }

  message SubmitDailyMap {
  }
}

message Downstream {
  oneof content {
    Pong pong = 1;
    Image image = 2;
    Telemetry telemetry = 3;
    SubmitResult submit_result = 4;
    TaskList task_list = 6;
  }

  message Pong {
    optional string echo = 1;
  }

  message Image {
    uint32 width = 1;
    uint32 height = 2;
    uint32 offset_x = 3;
    uint32 offset_y = 4;
    bytes data = 5;
  }

  message Telemetry {
    int64 timestamp = 1;
    SatelliteState state = 2;
    int32 position_x = 3;
    int32 position_y = 4;
    float velocity_x = 5;
    float velocity_y = 6;
    float battery = 7;
    float fuel = 8;
    uint32 data_sent = 9;
    uint32 data_received = 10;
    float distance_covered = 11;
  }

  message SubmitResult {
    bool success = 1;
    optional uint32 objectiveId = 2;
  }

  message TaskList {
    repeated Task task = 1;
  }
}

message Task {
  int64 scheduled_on = 1;
  oneof content {
    TakeImage takeImage = 2;
    SatelliteState switchState = 3;
    BurnSequence velocityChange = 4;
  }

  message TakeImage {
    enum CameraLens {
      narrow = 0;
      normal = 1;
      wide = 2;
    }

    optional uint32 actualPositionX = 1;
    optional uint32 actualPositionY = 2;
    uint32 plannedPositionX = 3;
    uint32 plannedPositionY = 4;
    CameraLens lens = 5;
  }

  message BurnSequence {
    enum VelocityChangeTaskRationale {
      Correctional = 0;
      OrbitEscape = 1;
      OrbitEnter = 2;
    }
    VelocityChangeTaskRationale rational = 1;
    uint32 target_x = 2;
    uint32 target_y = 3;
    optional uint32 add_target_x = 4;
    optional uint32 add_target_y = 5;
    repeated uint32 position_x = 6;
    repeated uint32 position_y = 7;
    repeated float velocity_x = 8;
    repeated float velocity_y = 9;
    uint32 acc_dt  = 10;
    uint32 detumble_dt = 11;
    float rem_angle_dev = 12;
    float min_charge = 13;
    float min_fuel = 14;
  }
}

enum SatelliteState {
  none = 0;
  deployment = 1;
  safe = 2;
  communication = 3;
  charge = 4;
  acquisition = 5;
  transition = 6;
}
